type: "transformation"
version: "1.0"
pipeline:
  components:
    Extract payload and metadata objects:
      type: "calculator"
      sources:
      - "Filter on source table"
      parameters:
        componentName: "Extract payload and metadata objects"
        includeInputColumns: "No"
        calculations:
        - - |-
            CASE "VALUE":"metadata"."op"
                WHEN 'd' THEN "VALUE":"before"
                ELSE "VALUE":"after"
            END
          - "MTLN_CDC_EXT_PAYLOAD"
        - - "\"VALUE\":\"metadata\""
          - "MTLN_CDC_EXT_METADATA"
        - - "\"VERSION\""
          - "MTLN_CDC_EXT_VERSION"
        - - "\"DATE_HOUR\""
          - "MTLN_CDC_EXT_DATE_HOUR"
        - - "\"FILENAME\""
          - "MTLN_CDC_EXT_FILENAME"
        - - "\"FILEPATH\""
          - "MTLN_CDC_EXT_FILEPATH"
    Extract nested data:
      type: "sql"
      sources:
      - "Extract payload and metadata objects"
      parameters:
        componentName: "Extract nested data"
        query: "SELECT \n    ${nested_select_list}\nFROM $T{Extract payload and metadata\
          \ objects}\n"
    Append change events:
      type: "table-output"
      sources:
      - "Extract nested data"
      parameters:
        componentName: "Append change events"
        warehouse: "${warehouse}"
        database: "${target_database}"
        schema: "${target_schema}"
        targetTable: "${target_table}"
        fixDataTypeMismatches: "No"
        columnMapping:
          fromGrid:
            variable: "target_metadata"
            columns:
            - "column_name"
            - "column_name"
        orderBy:
        - - "MTLN_CDC_SEQUENCE_NUMBER"
          - "Ascending"
        outputMode: "Append"
    Filter on source table:
      type: "sql"
      sources:
      - "Stage table"
      parameters:
        componentName: "Filter on source table"
        query: "SELECT \n  * \nFROM $T{Stage table}\nWHERE \n    \"DATABASE\" = '${source_database}'\n\
          \    AND \"SCHEMA\" = '${source_schema}'\n    AND \"TABLE\" = '${source_table}'\n\
          \    AND \"VERSION\" = ${source_version}\n    AND (\n        (\n       \
          \     \"DATE_HOUR\" = '${min_date_hour}'\n            AND \"FILENAME\" >=\
          \ '${min_filename}'\n        )\n        OR\n        (\n            \"DATE_HOUR\"\
          \ > '${min_date_hour}'\n        )\n    )"
    Stage table:
      type: "table-input"
      parameters:
        componentName: "Stage table"
        database: "${target_database}"
        schema: "${stage_schema}"
        targetTable: "${stage_table}"
        columnNames:
        - "VALUE"
        - "DATABASE"
        - "SCHEMA"
        - "TABLE"
        - "VERSION"
        - "DATE_HOUR"
        - "FILENAME"
        - "FILEPATH"
        timeOffset:
  variables:
    stage_table:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    target_schema:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    nested_select_list:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    warehouse:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    min_filename:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    source_database:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    source_version:
      metadata:
        type: "NUMBER"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    stage_schema:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    target_database:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    target_table:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    min_date_hour:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    source_table:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    source_schema:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
    target_metadata:
      metadata:
        type: "GRID"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
        columns:
          column_name:
            columnType: "TEXT"
      defaultValue:
      - - ""
design:
  components:
    Extract payload and metadata objects:
      position:
        x: 600
        "y": 220
      tempMetlId: 3
    Extract nested data:
      position:
        x: 800
        "y": 220
      tempMetlId: 4
    Append change events:
      position:
        x: 1080
        "y": 220
      tempMetlId: 7
    Filter on source table:
      position:
        x: 320
        "y": 220
      tempMetlId: 9
    Stage table:
      position:
        x: 120
        "y": 220
      tempMetlId: 10
  notes:
    "1":
      position:
        x: 40
        "y": 20
      size:
        height: 318
        width: 400
      theme: "light-yellow"
      content: "Read data from stage table, filter for source table and files from\
        \ __min_date_hour__ and __min_filename__ onwards"
    "3":
      position:
        x: 520
        "y": 20
      size:
        height: 318
        width: 400
      theme: "light-yellow"
      content: "Extract columns"
    "4":
      position:
        x: 1000
        "y": 20
      size:
        height: 318
        width: 200
      theme: "light-yellow"
      content: "Append new change events to target table"
    "5":
      position:
        x: 40
        "y": -240
      size:
        height: 178
        width: 560
      theme: "light-green"
      content: |-
        **Transformation type = change log**

        Extract latest change events for source table, and append them all to the target table as a change log
    "6":
      position:
        x: 240
        "y": 340
      size:
        height: 178
        width: 200
      theme: "yellow"
      content: "Using a SQL component as the Filter component does not support the\
        \ nested filtering we require on the __DATE_HOUR__ and __FILENAME__ columns."
