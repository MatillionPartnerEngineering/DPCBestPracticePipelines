type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start:
      type: "start"
      transitions:
        unconditional:
        - "Data Transfer"
      parameters:
        componentName: "Start"
    Data Transfer:
      type: "data-transfer-object"
      transitions:
        success:
        - "Create FF_XML_STRIPOUTER"
      parameters:
        componentName: "Data Transfer"
        sourceType: "HTTPS"
        performCertificateValidation: "No"
        sourceUrl3: "https://aws.amazon.com/blogs/aws/feed/"
        sourceUsername1:
        sourcePassword1:
        unpackZipFile: "No"
        targetType: "S3"
        gzipData: "No"
        targetObjectName: "data/semistructured/AWS-RSS.xml"
        targetUrl2: "s3://your-bucket-name"
        accessControlListOptions:
        encryption: "None"
    Replace stg_aws_rss_feed:
      type: "create-table"
      transitions:
        success:
        - "S3 Load"
      parameters:
        componentName: "Replace stg_aws_rss_feed"
        createReplace: "Replace"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        newTableName: "stg_aws_rss_feed"
        tableType: "Permanent"
        columns:
        - - "channel"
          - "VARIANT"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation:
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays:
        comment:
    S3 Load:
      type: "s3-load"
      transitions:
        success:
        - "Assert Table"
      parameters:
        componentName: "S3 Load"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://your-bucket-name"
        pattern: "data/semistructured/AWS-RSS.xml"
        encryption: "None"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "stg_aws_rss_feed"
        loadColumns:
        format: "FF_XML_STRIPOUTER"
        onError: "Abort Statement"
        sizeLimitB:
        purgeFiles: "False"
        matchByColumnName: "None"
        truncateColumns: "False"
        forceLoad: "False"
    Create FF_XML_STRIPOUTER:
      type: "create-file-format"
      transitions:
        success:
        - "Replace stg_aws_rss_feed"
      parameters:
        componentName: "Create FF_XML_STRIPOUTER"
        createReplace: "Create if not exists"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        fileFormatName: "FF_XML_STRIPOUTER"
        fileType: "XML"
        compression: "AUTO"
        ignoreUtf8Errors1: "False"
        preserveSpace: "False"
        stripOuterElement: "True"
        disableSnowflakeData: "False"
        disableAutoConvert: "False"
    Assert Table:
      type: "assert-table"
      transitions:
        success:
        - "Create aws_rss_feed"
      parameters:
        componentName: "Assert Table"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        tableName: "stg_aws_rss_feed"
        exists: "Yes"
        tableMetadata:
        rowCountComparisonType: "Equal To"
        rowCountValue: "1"
    Create aws_rss_feed:
      type: "create-table"
      parameters:
        componentName: "Create aws_rss_feed"
        createReplace: "Create if not exists"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        newTableName: "aws_rss_feed"
        tableType: "Permanent"
        columns:
        - - "GUID"
          - "VARCHAR"
          - "40"
          - ""
          - ""
          - "Yes"
          - "Yes"
          - ""
        - - "TITLE"
          - "VARCHAR"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "DESCRIPTION"
          - "VARCHAR"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        - - "PUBDATE"
          - "DATE"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation:
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays:
        comment:
design:
  components:
    Start:
      position:
        x: -450
        "y": 10
      tempMetlId: 1
    Data Transfer:
      position:
        x: -260
        "y": 10
      tempMetlId: 2
    Replace stg_aws_rss_feed:
      position:
        x: 100
        "y": 10
      tempMetlId: 3
    S3 Load:
      position:
        x: 240
        "y": 10
      tempMetlId: 4
    Create FF_XML_STRIPOUTER:
      position:
        x: -50
        "y": 10
      tempMetlId: 5
    Assert Table:
      position:
        x: 340
        "y": 10
      tempMetlId: 7
    Create aws_rss_feed:
      position:
        x: 490
        "y": 10
      tempMetlId: 8
  notes:
    "1":
      position:
        x: -360
        "y": -200
      size:
        height: 330
        width: 240
      theme: "white"
      content: |-
        Extract the AWS blog RSS feed from an HTTPS URL and save it to an S3 location.


        Remember to replace `your-bucket-name` in the component properties
    "2":
      position:
        x: 210
        "y": -200
      size:
        height: 328
        width: 220
      theme: "white"
      content: |-
        Load the XML data using the File Format.

        Remember to replace `your-bucket-name` in the component properties here too
